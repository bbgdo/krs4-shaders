#pragma kernel CS_pixel_sorting
#include "Lib/Luminance.cginc"

RWTexture2D<float4> input;
RWTexture2D<float4> output;

[numthreads(1, 1, 1)]
void CS_pixel_sorting(uint3 id : SV_DispatchThreadID) {
    uint width, height;
    input.GetDimensions(width, height);

    uint x = id.x;

    for (uint y = 1; y < height; y++) {
        float4 keyPixel = input[uint2(x, y)];
        float keyLuminance = luminance(keyPixel.rgb);

        int j = int(y) - 1;
        while (j >= 0) {
            float4 comparePixel = input[uint2(x, j)];
            float compareLuminance = luminance(comparePixel.rgb);

            if (compareLuminance > keyLuminance) {
                input[uint2(x, j + 1)] = comparePixel;
                j--;
            } else {
                break;
            }
        }
        input[uint2(x, j + 1)] = keyPixel;
    }

    for (uint out_y = 0; out_y < height; out_y++) {
        output[uint2(x, out_y)] = input[uint2(x, out_y)];
    }
}